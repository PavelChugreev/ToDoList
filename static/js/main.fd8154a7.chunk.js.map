{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-filter/post-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","done","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","termValue","target","value","this","setState","onUpdateTerm","type","placeholder","onChange","Component","Filter","buttons","name","label","filter","onUpdateFilter","map","clazz","onClick","PostListItem","onDelete","onTogImportant","onTogDone","classNames","important","onDoubleClick","PostList","posts","elements","item","id","AddPost","text","onValueChange","onSubmit","event","preventDefault","onAdd","App","data","maxId","deleteItem","addItem","index","findIndex","slice","body","newItem","length","indexOf","filterStatus","filteredPost","filterPosts","visiblePosts","searchPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd8154a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({done, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>ToDo List</h1>\r\n            <h2>{allPosts} purposes, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport \"./search-panel.css\";\r\n\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e){\r\n        const termValue = e.target.value;\r\n        this.setState({term: termValue})\r\n        this.props.onUpdateTerm(termValue);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"search in posts\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport \"./post-filter.css\";\r\n\r\nexport default class Filter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: \"all\", label: \"All\"},\r\n            {name: \"done\", label: \"Done\"}\r\n        ]\r\n    }\r\n\r\n    render(){\r\n        const {filter, onUpdateFilter} = this.props;\r\n        const buttons = this.buttons.map( ({name, label}) => {\r\n            const active = filter === name;\r\n            const clazz = active ? \"btn-info\" : \"btn-outline-secondary\"\r\n            return <button \r\n                        key={name} \r\n                        type=\"button\" \r\n                        className={`btn ${clazz}`}\r\n                        onClick={() => onUpdateFilter(name)}\r\n                    >{label}</button>\r\n        });\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render(){\r\n        const {label, onDelete, onTogImportant, onTogDone, important, done} = this.props;\r\n\r\n        let classNames = \"app-list-item d-flex\";\r\n        if(important){\r\n            classNames += \" important\";\r\n        }\r\n        if(done){\r\n            classNames += \" done\";\r\n        }\r\n\r\n        return(\r\n            <div className={classNames}\r\n                onDoubleClick={onTogDone}>\r\n                <span className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"btn-wrap d-flex\" >\r\n                    <i  onClick={onTogDone} className=\" fa fa-check-circle\"></i>\r\n                    <button \r\n                        onClick={onTogImportant}\r\n                        type=\"button\"\r\n                        className=\"btn-flag btn-sm\">\r\n                        <i className=\" fa fa-flag\"></i>\r\n                    </button>\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                        <i className=\" fa fa-trash-o\"></i>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PostListItem from \"../post-list-item/post-list-item\";\r\nimport \"./post-list.css\";\r\n\r\n\r\nconst PostList = ({posts, onDelete, onTogImportant, onTogDone}) => {\r\n\r\n    const elements = posts.map(item => {\r\n        let className = \"list-group-item\";\r\n        className = item.important ? className += \" important\" : className;\r\n        className = item.done ? className += \" done\" : className;\r\n\r\n        return(\r\n            <li key={item.id} className= {className}>\r\n                <PostListItem \r\n                    label={item.label} \r\n                    important={item.important}\r\n                    done={item.done}\r\n                    onDelete={() => onDelete(item.id)}\r\n                    onTogImportant={() => onTogImportant(item.id)}\r\n                    onTogDone={() => onTogDone(item.id)}/>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <ul className=\"post-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\nexport default PostList;","import React, { Component } from 'react';\r\nimport \"./post-add-form.css\";\r\n\r\nexport default class AddPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event){\r\n        this.setState(\r\n            {text: event.target.value}\r\n        )\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState(\r\n            {text: \"\"}\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"What should you do?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >Add new purpose</button>\r\n            </form>\r\n        );\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport Filter from \"../post-filter/post-filter\";\r\nimport PostList from \"../post-list/post-list\";\r\nimport AddPost from \"../post-add-form/post-add-form\";\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    label: \"Learning HTML/CSS\",\r\n                    important: false,\r\n                    done: true,\r\n                    id: 1\r\n                },\r\n                {\r\n                    label: \"Finish JavaScript course\",\r\n                    important: false,\r\n                    done: true,\r\n                    id: 2\r\n                },\r\n                {\r\n                    label: \"Gain knowledge about React\",\r\n                    important: false,\r\n                    done: true,\r\n                    id: 3\r\n                },\r\n                {\r\n                    label: \"Create first Reacr-App\",\r\n                    important: false,\r\n                    done: true,\r\n                    id: 4\r\n                },\r\n                {\r\n                    label: \"Prepare CV and portfolio\",\r\n                    important: false,\r\n                    done: true,\r\n                    id: 5\r\n                },\r\n                {\r\n                    label: \"Looking for a first job as a Frontend Developer\",\r\n                    important: true,\r\n                    done: false,\r\n                    id: 6\r\n                },\r\n            ],\r\n            term: \"\",\r\n            filter: \"all\"\r\n        }\r\n        this.maxId = 4;\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onTogImportant = this.onTogImportant.bind(this);\r\n        this.onTogDone = this.onTogDone.bind(this);\r\n        this.onUpdateTerm = this.onUpdateTerm.bind(this);\r\n        this.onUpdateFilter = this.onUpdateFilter.bind(this);\r\n    }\r\n\r\n    deleteItem(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return { data: newArr }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {data: newArr};\r\n        });\r\n    }\r\n\r\n    onTogImportant(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const item = data[index];\r\n            const newItem = {...item, important: !item.important}\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {data: newArr};\r\n        })\r\n    }\r\n\r\n    onTogDone(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const item = data[index];\r\n            const newItem = {...item, done: !item.done}\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {data: newArr};\r\n        })   \r\n    }\r\n\r\n    searchPosts(data, term){\r\n        if(term.length === 0){\r\n            return data;\r\n        } \r\n            return data.filter( item => {\r\n                return item.label.indexOf(term) > -1\r\n            });\r\n    }\r\n\r\n    onUpdateTerm(termValue){\r\n        this.setState({term: termValue})\r\n    }\r\n\r\n    filterPosts(data, filter){\r\n        if(filter === \"done\"){\r\n            return data.filter( item => item.done);\r\n        } else {\r\n            return data;\r\n        }\r\n    }\r\n\r\n    onUpdateFilter(filterStatus){\r\n        this.setState({filter: filterStatus})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const done = data.filter(item => item.done).length;\r\n        const allPosts = data.length;\r\n\r\n        const filteredPost = this.filterPosts(data, filter);\r\n        const visiblePosts = this.searchPosts(filteredPost, term);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    done={done}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateTerm={this.onUpdateTerm}\r\n                    />\r\n                    <Filter\r\n                        onUpdateFilter={this.onUpdateFilter}\r\n                        filter={filter}\r\n                    />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onTogImportant={this.onTogImportant}\r\n                    onTogDone={this.onTogDone}\r\n                />\r\n                <AddPost\r\n                    onAdd={this.addItem}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}