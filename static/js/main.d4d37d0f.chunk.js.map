{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-filter/post-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","termValue","target","value","this","setState","onUpdateTerm","type","placeholder","onChange","Component","Filter","buttons","name","label","filter","onUpdateFilter","map","clazz","onClick","PostListItem","onDelete","onTogImportant","onTogLiked","classNames","important","like","onDoubleClick","PostList","posts","elements","item","id","AddPost","text","onValueChange","onSubmit","event","preventDefault","onAdd","App","data","maxId","deleteItem","addItem","index","findIndex","slice","body","newItem","length","indexOf","filterStatus","filteredPost","filterPosts","visiblePosts","searchPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4d37d0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Pavel Chugreev</h1>\r\n            <h2>{allPosts} posts, liked {liked}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport \"./search-panel.css\";\r\n\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e){\r\n        const termValue = e.target.value;\r\n        this.setState({term: termValue})\r\n        this.props.onUpdateTerm(termValue);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"search in posts\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport \"./post-filter.css\";\r\n\r\nexport default class Filter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: \"all\", label: \"All\"},\r\n            {name: \"like\", label: \"Liked\"}\r\n        ]\r\n    }\r\n\r\n    render(){\r\n        const {filter, onUpdateFilter} = this.props;\r\n        const buttons = this.buttons.map( ({name, label}) => {\r\n            const active = filter === name;\r\n            const clazz = active ? \"btn-info\" : \"btn-outline-secondary\"\r\n            return <button \r\n                        key={name} \r\n                        type=\"button\" \r\n                        className={`btn ${clazz}`}\r\n                        onClick={() => onUpdateFilter(name)}\r\n                    >{label}</button>\r\n        });\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         important: false,\r\n    //         like: false\r\n    //     };\r\n        \r\n    //     this.onImportant = this.onImportant.bind(this);\r\n    //     this.onLike = () => {\r\n    //         this.setState(({like}) => ({\r\n    //             like: !like\r\n    //         }));\r\n    //     };\r\n    // }\r\n\r\n    // onImportant(){\r\n    //     this.setState(({important}) => ({\r\n    //         important: !important\r\n    //     }));\r\n    // }\r\n\r\n    render(){\r\n        const {label, onDelete, onTogImportant, onTogLiked, important, like} = this.props;\r\n        // const {important, like} = this.state;\r\n\r\n        let classNames = \"app-list-item d-flex\";\r\n        if(important){\r\n            classNames += \" important\";\r\n        }\r\n        if(like){\r\n            classNames += \" like\";\r\n        }\r\n\r\n        return(\r\n            <div className={classNames}\r\n                onDoubleClick={onTogLiked}>\r\n                <span className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"btn-wrap d-flex\" >\r\n                    <button \r\n                        onClick={onTogImportant}\r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\">\r\n                        <i className=\" fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                        <i className=\" fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i  onClick={onTogLiked} className=\"fa fa-heart\"></i> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PostListItem from \"../post-list-item/post-list-item\";\r\nimport \"./post-list.css\";\r\n\r\n\r\nconst PostList = ({posts, onDelete, onTogImportant, onTogLiked}) => {\r\n\r\n    const elements = posts.map(item => {\r\n        return(\r\n            <li key={item.id} className=\"list-group-item\">\r\n                <PostListItem \r\n                    label={item.label} \r\n                    important={item.important}\r\n                    like={item.like}\r\n                    onDelete={() => onDelete(item.id)}\r\n                    onTogImportant={() => onTogImportant(item.id)}\r\n                    onTogLiked={() => onTogLiked(item.id)}/>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <ul className=\"post-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\nexport default PostList;","import React, { Component } from 'react';\r\nimport \"./post-add-form.css\";\r\n\r\nexport default class AddPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event){\r\n        this.setState(\r\n            {text: event.target.value}\r\n        )\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState(\r\n            {text: \"\"}\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Write down your minds\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >ADD</button>\r\n            </form>\r\n        );\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport Filter from \"../post-filter/post-filter\";\r\nimport PostList from \"../post-list/post-list\";\r\nimport AddPost from \"../post-add-form/post-add-form\";\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    label: \"I continue to learning. It's so difficult, but I can!\",\r\n                    important: false,\r\n                    like: false,\r\n                    id: 1\r\n                },\r\n                {\r\n                    label: \"There were first steps in REACT today\",\r\n                    important: false,\r\n                    like: false,\r\n                    id: 2\r\n                },\r\n                {\r\n                    label: \"Going to learn REACT\",\r\n                    important: false,\r\n                    like: false,\r\n                    id: 3\r\n                }\r\n            ],\r\n            term: \"\",\r\n            filter: \"all\"\r\n        }\r\n        this.maxId = 4;\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onTogImportant = this.onTogImportant.bind(this);\r\n        this.onTogLiked = this.onTogLiked.bind(this);\r\n        this.onUpdateTerm = this.onUpdateTerm.bind(this);\r\n        this.onUpdateFilter = this.onUpdateFilter.bind(this);\r\n    }\r\n\r\n    deleteItem(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return { data: newArr }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {data: newArr};\r\n        });\r\n    }\r\n\r\n    onTogImportant(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const item = data[index];\r\n            const newItem = {...item, important: !item.important}\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {data: newArr};\r\n        })\r\n    }\r\n\r\n    onTogLiked(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            const item = data[index];\r\n            const newItem = {...item, like: !item.like}\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {data: newArr};\r\n        })   \r\n    }\r\n\r\n    searchPosts(data, term){\r\n        if(term.length === 0){\r\n            return data;\r\n        } \r\n            return data.filter( item => {\r\n                return item.label.indexOf(term) > -1\r\n            });\r\n    }\r\n\r\n    onUpdateTerm(termValue){\r\n        this.setState({term: termValue})\r\n    }\r\n\r\n    filterPosts(data, filter){\r\n        if(filter === \"like\"){\r\n            return data.filter( item => item.like);\r\n        } else {\r\n            return data;\r\n        }\r\n    }\r\n\r\n    onUpdateFilter(filterStatus){\r\n        this.setState({filter: filterStatus})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const filteredPost = this.filterPosts(data, filter);\r\n        const visiblePosts = this.searchPosts(filteredPost, term);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateTerm={this.onUpdateTerm}\r\n                    />\r\n                    <Filter\r\n                        onUpdateFilter={this.onUpdateFilter}\r\n                        filter={filter}\r\n                    />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onTogImportant={this.onTogImportant}\r\n                    onTogLiked={this.onTogLiked}\r\n                />\r\n                <AddPost\r\n                    onAdd={this.addItem}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport \"./index.css\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}